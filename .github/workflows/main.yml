name: Auto-Create Standard Sub-Issues

on:
  issues:
    types: [opened]

jobs:
  create-sub-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Create 13 Sub-Issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }} # Use a PAT with repo scope
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const parentIssueNumber = context.payload.issue.number;

            const subIssueTitles = [
              "Solution GTM & Tech Owners Identified & Engaged",
              "Leadership Sponsor Identified",
              "V-team Including SME Identified & Engaged",
              "Customer 0,1 has Verified Need",
              "Customer Personas, Pain Points and Sol Value Prop",
              "Market Sizing and Growth",
              "Scalability Potential and Pipeline",
              "Pricing Strategy Identified",
              "Rev & ACR Expectations",
              "Stage 0 GSF Assets",
              "Ref Architecture, Solution V1 Scope",
              "Release Plan Defined",
              "Affiliate Dedicated Resources for Co-Dev"
            ];

            for (const title of subIssueTitles) {
              try {
                // Create sub-issue
                const subIssue = await github.rest.issues.create({
                  owner,
                  repo,
                  title,
                  body: `Automatically created sub-issue linked to parent issue #${parentIssueNumber}`
                });

                // Link sub-issue to parent
                await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/sub-issues', {
                  owner,
                  repo,
                  issue_number: parentIssueNumber,
                  headers: {
                    'X-GitHub-Api-Version': '2022-11-28',
                    'Accept': 'application/vnd.github+json'
                  },
                  data: {
                    issue_number: subIssue.data.number
                  }
                });

                console.log(`✅ Created and linked sub-issue #${subIssue.data.number}`);
                
                // Delay to avoid rate limits
                await new Promise(resolve => setTimeout(resolve, 1500));
              } catch (error) {
                console.error(`❌ Failed to create/link sub-issue "${title}":`, error.message);
              }
            }
